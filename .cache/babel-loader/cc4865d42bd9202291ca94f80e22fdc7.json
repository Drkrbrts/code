{"ast":null,"code":"import axios from \"axios\";\nvar endpoint = \"https://api.remotebootcamp.dev/api/entities\";\n\nvar addEntity = function addEntity(payload) {\n  var config = {\n    method: \"POST\",\n    url: endpoint + \"/cars\",\n    data: payload,\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nvar getEntity = function getEntity(id) {\n  var config = {\n    method: \"GET\",\n    url: endpoint + \"/cars/\" + id,\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nexport { addEntity, getEntity };","map":{"version":3,"sources":["C:/SF.MonicaCode/Starter.react-componentize/src/components/codechallenge/seperate.js"],"names":["axios","endpoint","addEntity","payload","config","method","url","data","withCredentials","crossdomain","headers","getEntity","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEC,IAAIC,QAAQ,GAAG,6CAAf;;AAGD,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAEzB,MAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,GAAG,EAAEL,QAAQ,GAAG,OAFH;AAGbM,IAAAA,IAAI,EAACJ,OAHQ;AAIbK,IAAAA,eAAe,EAAE,IAJJ;AAKbC,IAAAA,WAAW,EAAE,IALA;AAMbC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AANI,GAAf;AASA,SAAOV,KAAK,CAACI,MAAD,CAAZ;AACD,CAZH;;AAaE,IAAIO,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AAEtB,MAAMR,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,GAAG,EAAEL,QAAQ,GAAG,QAAX,GAAsBW,EAFd;AAGbJ,IAAAA,eAAe,EAAE,IAHJ;AAIbC,IAAAA,WAAW,EAAE,IAJA;AAKbC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALI,GAAf;AAQA,SAAOV,KAAK,CAACI,MAAD,CAAZ;AACD,CAXD;;AAaA,SAAQF,SAAR,EAAmBS,SAAnB","sourcesContent":["import axios from \"axios\";\r\n\r\n var endpoint = \"https://api.remotebootcamp.dev/api/entities\"\r\n\r\n\r\nlet addEntity = (payload) => {\r\n\r\n    const config = {\r\n      method: \"POST\",\r\n      url: endpoint + \"/cars\",\r\n      data:payload,\r\n      withCredentials: true,\r\n      crossdomain: true,\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n  \r\n    return axios(config);\r\n  };\r\n  let getEntity = (id) => {\r\n\r\n    const config = {\r\n      method: \"GET\",\r\n      url: endpoint + \"/cars/\"  +id,\r\n      withCredentials: true,\r\n      crossdomain: true,\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n  \r\n    return axios(config);\r\n  };\r\n\r\n  export {addEntity, getEntity};\r\n"]},"metadata":{},"sourceType":"module"}